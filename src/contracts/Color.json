{
  "contractName": "Color",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colors",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_color",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"colors\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_color\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.      * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Color.sol\":\"Color\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Color.sol\":{\"keccak256\":\"0x9dc78fb1dd984efcacbf2eed379213803487d8c9d83898e76374b4621f81760e\",\"urls\":[\"bzz-raw://4b303ebaf4e76480c531098e759257fc0e11d8a7ad4e07646c95d1781df32986\",\"dweb:/ipfs/Qmb5zex97FcNaghsefW9sPv9k6bXsL73Y1eFp432gbg48o\"]},\"project:/contracts/ERC721Full.sol\":{\"keccak256\":\"0x4a5ea679cd0ee338c919eb3972c2e663c9be136435210f7b39e924e6bcdcbab9\",\"urls\":[\"bzz-raw://b2bc10b90cebf856aa5389414ec686343c19cfe285bbdf157af5a5326162fb81\",\"dweb:/ipfs/QmcHcFcZH9KMDXiHQrgbrZVVy6yk14ZmaTWRmuRDfMASvk\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a2578063b88d4fde11610071578063b88d4fde14610382578063bd11f69d14610448578063c87b56dd14610465578063d85d3d2714610482578063e985e9c51461052857610116565b80636352211e1461030957806370a082311461032657806395d89b411461034c578063a22cb4651461035457610116565b806318160ddd116100e957806318160ddd1461023a57806323b872dd146102545780632f745c591461028a57806342842e0e146102b65780634f6ccce7146102ec57610116565b806301ffc9a71461011b57806306fdde0314610156578063081812fc146101d3578063095ea7b31461020c575b600080fd5b6101426004803603602081101561013157600080fd5b50356001600160e01b031916610556565b604080519115158252519081900360200190f35b61015e610575565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610198578181015183820152602001610180565b50505050905090810190601f1680156101c55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f0600480360360208110156101e957600080fd5b503561060c565b604080516001600160a01b039092168252519081900360200190f35b6102386004803603604081101561022257600080fd5b506001600160a01b03813516906020013561066e565b005b61024261077f565b60408051918252519081900360200190f35b6102386004803603606081101561026a57600080fd5b506001600160a01b03813581169160208101359091169060400135610785565b610242600480360360408110156102a057600080fd5b506001600160a01b0381351690602001356107da565b610238600480360360608110156102cc57600080fd5b506001600160a01b03813581169160208101359091169060400135610859565b6102426004803603602081101561030257600080fd5b5035610874565b6101f06004803603602081101561031f57600080fd5b50356108da565b6102426004803603602081101561033c57600080fd5b50356001600160a01b0316610934565b61015e61099c565b6102386004803603604081101561036a57600080fd5b506001600160a01b03813516906020013515156109fd565b6102386004803603608081101561039857600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103d357600080fd5b8201836020820111156103e557600080fd5b8035906020019184600183028401116401000000008311171561040757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610ac9945050505050565b61015e6004803603602081101561045e57600080fd5b5035610b21565b61015e6004803603602081101561047b57600080fd5b5035610bc7565b6102386004803603602081101561049857600080fd5b8101906020810181356401000000008111156104b357600080fd5b8201836020820111156104c557600080fd5b803590602001918460018302840111640100000000831117156104e757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610cac945050505050565b6101426004803603604081101561053e57600080fd5b506001600160a01b0381358116916020013516610e33565b6001600160e01b03191660009081526020819052604090205460ff1690565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106015780601f106105d657610100808354040283529160200191610601565b820191906000526020600020905b8154815290600101906020018083116105e457829003601f168201915b505050505090505b90565b600061061782610e61565b6106525760405162461bcd60e51b815260040180806020018281038252602c815260200180611736602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b6000610679826108da565b9050806001600160a01b0316836001600160a01b031614156106cc5760405162461bcd60e51b81526004018080602001828103825260218152602001806117ba6021913960400191505060405180910390fd5b336001600160a01b03821614806106e857506106e88133610e33565b6107235760405162461bcd60e51b81526004018080602001828103825260388152602001806116ab6038913960400191505060405180910390fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b61078f3382610e7e565b6107ca5760405162461bcd60e51b81526004018080602001828103825260318152602001806117db6031913960400191505060405180910390fd5b6107d5838383610f22565b505050565b60006107e583610934565b82106108225760405162461bcd60e51b815260040180806020018281038252602b8152602001806115fe602b913960400191505060405180910390fd5b6001600160a01b038316600090815260056020526040902080548390811061084657fe5b9060005260206000200154905092915050565b6107d583838360405180602001604052806000815250610ac9565b600061087e61077f565b82106108bb5760405162461bcd60e51b815260040180806020018281038252602c81526020018061180c602c913960400191505060405180910390fd5b600782815481106108c857fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b03168061092e5760405162461bcd60e51b815260040180806020018281038252602981526020018061170d6029913960400191505060405180910390fd5b92915050565b60006001600160a01b03821661097b5760405162461bcd60e51b815260040180806020018281038252602a8152602001806116e3602a913960400191505060405180910390fd5b6001600160a01b038216600090815260036020526040902061092e90610f41565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106015780601f106105d657610100808354040283529160200191610601565b6001600160a01b038216331415610a5b576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b610ad4848484610785565b610ae084848484610f45565b610b1b5760405162461bcd60e51b81526004018080602001828103825260328152602001806116296032913960400191505060405180910390fd5b50505050565b600c8181548110610b2e57fe5b600091825260209182902001805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815293509091830182828015610bbf5780601f10610b9457610100808354040283529160200191610bbf565b820191906000526020600020905b815481529060010190602001808311610ba257829003601f168201915b505050505081565b6060610bd282610e61565b610c0d5760405162461bcd60e51b815260040180806020018281038252602f81526020018061178b602f913960400191505060405180910390fd5b6000828152600b602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610ca05780601f10610c7557610100808354040283529160200191610ca0565b820191906000526020600020905b815481529060010190602001808311610c8357829003601f168201915b50505050509050919050565b600d816040518082805190602001908083835b60208310610cde5780518252601f199092019160209182019101610cbf565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff16159150610d1b905057600080fd5b600c805460018101808355600092835283519091610d62917fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7909101906020860190611545565b509050611b3a8110610db4576040805162461bcd60e51b815260206004820152601660248201527510dbdb9d1c9858dd08131a5b5a5d0814995858da195960521b604482015290519081900360640190fd5b610dbe3382611078565b6001600d836040518082805190602001908083835b60208310610df25780518252601f199092019160209182019101610dd3565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220805460ff19169315159390931790925550505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b6000610e8982610e61565b610ec45760405162461bcd60e51b815260040180806020018281038252602c81526020018061167f602c913960400191505060405180910390fd5b6000610ecf836108da565b9050806001600160a01b0316846001600160a01b03161480610f0a5750836001600160a01b0316610eff8461060c565b6001600160a01b0316145b80610f1a5750610f1a8185610e33565b949350505050565b610f2d838383611099565b610f3783826111dd565b6107d582826112d2565b5490565b6000610f59846001600160a01b0316611310565b610f6557506001610f1a565b604051630a85bd0160e11b815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015610fdf578181015183820152602001610fc7565b50505050905090810190601f16801561100c5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561102e57600080fd5b505af1158015611042573d6000803e3d6000fd5b505050506040513d602081101561105857600080fd5b50516001600160e01b031916630a85bd0160e11b14915050949350505050565b6110828282611316565b61108c82826112d2565b61109581611447565b5050565b826001600160a01b03166110ac826108da565b6001600160a01b0316146110f15760405162461bcd60e51b81526004018080602001828103825260298152602001806117626029913960400191505060405180910390fd5b6001600160a01b0382166111365760405162461bcd60e51b815260040180806020018281038252602481526020018061165b6024913960400191505060405180910390fd5b61113f8161148b565b6001600160a01b0383166000908152600360205260409020611160906114c8565b6001600160a01b0382166000908152600360205260409020611181906114df565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b03821660009081526005602052604081205461120790600163ffffffff6114e816565b6000838152600660205260409020549091508082146112a2576001600160a01b038416600090815260056020526040812080548490811061124457fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061128257fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b03841660009081526005602052604090208054906112cb9060001983016115c3565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b3b151590565b6001600160a01b038216611371576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61137a81610e61565b156113cc576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600081815260016020908152604080832080546001600160a01b0319166001600160a01b03871690811790915583526003909152902061140b906114df565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6000818152600260205260409020546001600160a01b0316156114c557600081815260026020526040902080546001600160a01b03191690555b50565b80546114db90600163ffffffff6114e816565b9055565b80546001019055565b60008282111561153f576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061158657805160ff19168380011785556115b3565b828001600101855582156115b3579182015b828111156115b3578251825591602001919060010190611598565b506115bf9291506115e3565b5090565b8154818355818111156107d5576000838152602090206107d59181019083015b61060991905b808211156115bf57600081556001016115e956fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a7231582034e112fbeaf98d692d169e88b6364e96fa74ca3c813f12a44fbd2ffe646b678064736f6c63430005100032",
  "sourceMap": "57:417:0:-;;;167:60;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;37865:157:1;;;;;;;;;;;-1:-1:-1;;;37865:157:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;37865:157:1;;;;;;;11130:40;-1:-1:-1;;;;;;;;11130:18:1;:40;:::i;:::-;14212;-1:-1:-1;;;;;;;;14212:18:1;:40;:::i;:::-;26545:51;-1:-1:-1;;;;;;;;26545:18:1;:51;:::i;:::-;35425:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;35448:16:1;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;35555:49:1;-1:-1:-1;;;;;;;;35555:18:1;:49;:::i;:::-;35352:260;;37865:157;;57:417:0;;11877:193:1;-1:-1:-1;;;;;;11953:25:1;;;;;11945:66;;;;;-1:-1:-1;;;11945:66:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12022:33:1;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;12022:40:1;12058:4;12022:40;;;11877:193::o;57:417:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:417:0;;;-1:-1:-1;57:417:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "57:417:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;57:417:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11335:135:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11335:135:1;-1:-1:-1;;;;;;11335:135:1;;:::i;:::-;;;;;;;;;;;;;;;;;;35723:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;35723:85:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16281:204;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16281:204:1;;:::i;:::-;;;;-1:-1:-1;;;;;16281:204:1;;;;;;;;;;;;;;15567:421;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;15567:421:1;;;;;;;;:::i;:::-;;27377:96;;;:::i;:::-;;;;;;;;;;;;;;;;17958:290;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;17958:290:1;;;;;;;;;;;;;;;;;:::i;26986:232::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;26986:232:1;;;;;;;;:::i;18894:134::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;18894:134:1;;;;;;;;;;;;;;;;;:::i;27819:199::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;27819:199:1;;:::i;14908:228::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14908:228:1;;:::i;14471:211::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14471:211:1;-1:-1:-1;;;;;14471:211:1;;:::i;35923:89::-;;;:::i;16786:248::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;16786:248:1;;;;;;;;;;:::i;19747:268::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;19747:268:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;19747:268:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;19747:268:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;19747:268:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;19747:268:1;;-1:-1:-1;19747:268:1;;-1:-1:-1;;;;;19747:268:1:i;92:23:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;92:23:0;;:::i;36219:205:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;36219:205:1;;:::i;235:236:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;235:236:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;235:236:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;235:236:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;235:236:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;235:236:0;;-1:-1:-1;235:236:0;;-1:-1:-1;;;;;235:236:0:i;17364:147:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;17364:147:1;;;;;;;;;;:::i;11335:135::-;-1:-1:-1;;;;;;11429:33:1;11405:4;11429:33;;;;;;;;;;;;;;11335:135::o;35723:85::-;35795:5;35788:12;;;;;;;;-1:-1:-1;;35788:12:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35762:13;;35788:12;;35795:5;;35788:12;;35795:5;35788:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35723:85;;:::o;16281:204::-;16340:7;16368:16;16376:7;16368;:16::i;:::-;16360:73;;;;-1:-1:-1;;;16360:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16453:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;16453:24:1;;16281:204::o;15567:421::-;15631:13;15647:16;15655:7;15647;:16::i;:::-;15631:32;;15688:5;-1:-1:-1;;;;;15682:11:1;:2;-1:-1:-1;;;;;15682:11:1;;;15674:57;;;;-1:-1:-1;;;15674:57:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15752:10;-1:-1:-1;;;;;15752:19:1;;;;:58;;;15775:35;15792:5;15799:10;15775:16;:35::i;:::-;15744:150;;;;-1:-1:-1;;;15744:150:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15907:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;15907:29:1;-1:-1:-1;;;;;15907:29:1;;;;;;;;;15952:28;;15907:24;;15952:28;;;;;;;15567:421;;;:::o;27377:96::-;27448:10;:17;27377:96;:::o;17958:290::-;18102:39;18121:10;18133:7;18102:18;:39::i;:::-;18094:101;;;;-1:-1:-1;;;18094:101:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18208:32;18222:4;18228:2;18232:7;18208:13;:32::i;:::-;17958:290;;;:::o;26986:232::-;27066:7;27102:16;27112:5;27102:9;:16::i;:::-;27094:5;:24;27086:80;;;;-1:-1:-1;;;27086:80:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27184:19:1;;;;;;:12;:19;;;;;:26;;27204:5;;27184:26;;;;;;;;;;;;;;27177:33;;26986:232;;;;:::o;18894:134::-;18981:39;18998:4;19004:2;19008:7;18981:39;;;;;;;;;;;;:16;:39::i;27819:199::-;27877:7;27913:13;:11;:13::i;:::-;27905:5;:21;27897:78;;;;-1:-1:-1;;;27897:78:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27993:10;28004:5;27993:17;;;;;;;;;;;;;;;;27986:24;;27819:199;;;:::o;14908:228::-;14963:7;14999:20;;;:11;:20;;;;;;-1:-1:-1;;;;;14999:20:1;15038:19;15030:73;;;;-1:-1:-1;;;15030:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15123:5;14908:228;-1:-1:-1;;14908:228:1:o;14471:211::-;14526:7;-1:-1:-1;;;;;14554:19:1;;14546:74;;;;-1:-1:-1;;;14546:74:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14640:24:1;;;;;;:17;:24;;;;;:34;;:32;:34::i;35923:89::-;35997:7;35990:14;;;;;;;;-1:-1:-1;;35990:14:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35964:13;;35990:14;;35997:7;;35990:14;;35997:7;35990:14;;;;;;;;;;;;;;;;;;;;;;;;16786:248;-1:-1:-1;;;;;16866:16:1;;16872:10;16866:16;;16858:54;;;;;-1:-1:-1;;;16858:54:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;16944:10;16925:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;16925:34:1;;;;;;;;;;;;:45;;-1:-1:-1;;16925:45:1;;;;;;;;;;16986:40;;;;;;;16925:34;;16944:10;16986:40;;;;;;;;;;;16786:248;;:::o;19747:268::-;19854:31;19867:4;19873:2;19877:7;19854:12;:31::i;:::-;19904:48;19927:4;19933:2;19937:7;19946:5;19904:22;:48::i;:::-;19896:111;;;;-1:-1:-1;;;19896:111:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19747:268;;;;:::o;92:23:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;92:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;92:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;36219:205:1:-;36277:13;36311:16;36319:7;36311;:16::i;:::-;36303:76;;;;-1:-1:-1;;;36303:76:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36397:19;;;;:10;:19;;;;;;;;;36390:26;;;;;;-1:-1:-1;;36390:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36397:19;;36390:26;;36397:19;36390:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36219:205;;;:::o;235:236:0:-;294:12;307:6;294:20;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;294:20:0;;;;;-1:-1:-1;294:20:0;;;;;;;;;;;;;293:21;;-1:-1:-1;285:30:0;;-1:-1:-1;285:30:0;;;;;333:6;27:10:-1;;39:1;23:18;;45:23;;;322:8:0;333:19;;;;;23:18:-1;;333:19:0;;;;;;;;;;;;:::i;:::-;;322:30;;373:4;367:3;:10;359:45;;;;;-1:-1:-1;;;359:45:0;;;;;;;;;;;;-1:-1:-1;;;359:45:0;;;;;;;;;;;;;;;411:22;417:10;429:3;411:5;:22::i;:::-;463:4;440:12;453:6;440:20;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;440:20:0;;;;;-1:-1:-1;440:20:0;;;;;;;;;;:27;;-1:-1:-1;;440:27:0;;;;;;;;;;;-1:-1:-1;;;;235:236:0:o;17364:147:1:-;-1:-1:-1;;;;;17468:25:1;;;17444:4;17468:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;17364:147::o;20217:155::-;20274:4;20307:20;;;:11;:20;;;;;;-1:-1:-1;;;;;20307:20:1;20345:19;;;20217:155::o;20742:333::-;20827:4;20852:16;20860:7;20852;:16::i;:::-;20844:73;;;;-1:-1:-1;;;20844:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20928:13;20944:16;20952:7;20944;:16::i;:::-;20928:32;;20990:5;-1:-1:-1;;;;;20979:16:1;:7;-1:-1:-1;;;;;20979:16:1;;:51;;;;21023:7;-1:-1:-1;;;;;20999:31:1;:20;21011:7;20999:11;:20::i;:::-;-1:-1:-1;;;;;20999:31:1;;20979:51;:87;;;;21034:32;21051:5;21058:7;21034:16;:32::i;:::-;20971:96;20742:333;-1:-1:-1;;;;20742:333:1:o;28402:245::-;28488:38;28508:4;28514:2;28518:7;28488:19;:38::i;:::-;28539:47;28572:4;28578:7;28539:32;:47::i;:::-;28599:40;28627:2;28631:7;28599:27;:40::i;10014:114::-;10106:14;;10014:114::o;23989:356::-;24111:4;24138:15;:2;-1:-1:-1;;;;;24138:13:1;;:15::i;:::-;24133:60;;-1:-1:-1;24177:4:1;24170:11;;24133:60;24221:70;;-1:-1:-1;;;24221:70:1;;24258:10;24221:70;;;;;;-1:-1:-1;;;;;24221:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;24205:13;;24221:36;;;;;;24258:10;;24270:4;;24276:7;;24285:5;;24221:70;;;;;;;;;;;24205:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;24221:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24221:70:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24221:70:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24221:70:1;-1:-1:-1;;;;;;24310:26:1;-1:-1:-1;;;24310:26:1;;-1:-1:-1;;23989:356:1;;;;;;:::o;28912:202::-;28976:24;28988:2;28992:7;28976:11;:24::i;:::-;29013:40;29041:2;29045:7;29013:27;:40::i;:::-;29066;29098:7;29066:31;:40::i;:::-;28912:202;;:::o;22944:459::-;23058:4;-1:-1:-1;;;;;23038:24:1;:16;23046:7;23038;:16::i;:::-;-1:-1:-1;;;;;23038:24:1;;23030:78;;;;-1:-1:-1;;;23030:78:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23127:16:1;;23119:65;;;;-1:-1:-1;;;23119:65:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23197:23;23212:7;23197:14;:23::i;:::-;-1:-1:-1;;;;;23233:23:1;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;23279:21:1;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;23325:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;23325:25:1;-1:-1:-1;;;;;23325:25:1;;;;;;;;;23368:27;;23325:20;;23368:27;;;;;;;22944:459;;;:::o;31585:1148::-;-1:-1:-1;;;;;31876:18:1;;31851:22;31876:18;;;:12;:18;;;;;:25;:32;;31906:1;31876:32;:29;:32;:::i;:::-;31919:18;31940:26;;;:17;:26;;;;;;31851:57;;-1:-1:-1;32073:28:1;;;32069:328;;-1:-1:-1;;;;;32140:18:1;;32118:19;32140:18;;;:12;:18;;;;;:34;;32159:14;;32140:34;;;;;;;;;;;;;;32118:56;;32224:11;32191:12;:18;32204:4;-1:-1:-1;;;;;32191:18:1;-1:-1:-1;;;;;32191:18:1;;;;;;;;;;;;32210:10;32191:30;;;;;;;;;;;;;;;;;;;:44;;;;32308:30;;;:17;:30;;;;;:43;;;32069:328;-1:-1:-1;;;;;32486:18:1;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;32486:27:1;;;:::i;:::-;;31585:1148;;;;:::o;30409:186::-;-1:-1:-1;;;;;30523:16:1;;;;;;;:12;:16;;;;;;;;:23;;30494:26;;;:17;:26;;;;;:52;;;30557:16;;;39:1:-1;23:18;;45:23;;30557:30:1;;;;;;;;30409:186::o;8473:422::-;8840:20;8879:8;;;8473:422::o;21328:335::-;-1:-1:-1;;;;;21400:16:1;;21392:61;;;;;-1:-1:-1;;;21392:61:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21473:16;21481:7;21473;:16::i;:::-;21472:17;21464:58;;;;;-1:-1:-1;;;21464:58:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;21535:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;21535:25:1;-1:-1:-1;;;;;21535:25:1;;;;;;;;21571:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;21622;;21647:7;;-1:-1:-1;;;;;21622:33:1;;;21639:1;;21622:33;;21639:1;;21622:33;21328:335;;:::o;30796:164::-;30900:10;:17;;30873:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;30928:24:1;;;;;;;30796:164::o;24513:175::-;24613:1;24577:24;;;:15;:24;;;;;;-1:-1:-1;;;;;24577:24:1;:38;24573:108;;24667:1;24632:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;24632:37:1;;;24573:108;24513:175;:::o;10235:110::-;10316:14;;:21;;10335:1;10316:21;:18;:21;:::i;:::-;10299:38;;10235:110::o;10136:91::-;10200:19;;10218:1;10200:19;;;10136:91::o;5538:184::-;5596:7;5629:1;5624;:6;;5616:49;;;;;-1:-1:-1;;;5616:49:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5688:5:1;;;5538:184::o;57:417:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:417:0;;;-1:-1:-1;57:417:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./ERC721Full.sol\";\r\n\r\ncontract Color is ERC721Full{\r\n    string [] public colors;\r\n    mapping(string => bool) _colorExists;\r\n\r\n    constructor()ERC721Full(\"Sentences\", \"GTS\") public{\r\n\r\n    }\r\n\r\n\r\n  function mint(string memory _color) public {\r\n    require(!_colorExists[_color]);\r\n    uint _id = colors.push(_color);\r\n    require(_id < 6970, \"Contract Limit Reached\");\r\n    _mint(msg.sender, _id);\r\n    _colorExists[_color] = true;\r\n}\r\n}",
  "sourcePath": "C:\\Users\\brads\\Desktop\\Little projects\\Coding\\GTC\\contracts\\Color.sol",
  "ast": {
    "absolutePath": "project:/contracts/Color.sol",
    "exportedSymbols": {
      "Color": [
        59
      ]
    },
    "id": 60,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "project:/contracts/ERC721Full.sol",
        "file": "./ERC721Full.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 60,
        "sourceUnit": 1515,
        "src": "27:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1514,
              "src": "75:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1514",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "75:10:0"
          }
        ],
        "contractDependencies": [
          69,
          170,
          432,
          990,
          1015,
          1348,
          1369,
          1494,
          1514
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 59,
        "linearizedBaseContracts": [
          59,
          1514,
          1494,
          1369,
          1348,
          1015,
          990,
          170,
          432,
          69
        ],
        "name": "Color",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "colors",
            "nodeType": "VariableDeclaration",
            "scope": 59,
            "src": "92:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 5,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "92:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 6,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "92:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "_colorExists",
            "nodeType": "VariableDeclaration",
            "scope": 59,
            "src": "122:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "130:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "122:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 9,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "140:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "217:10:0",
              "statements": []
            },
            "documentation": null,
            "id": 19,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "53656e74656e636573",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "191:11:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4901d28f0f0a4d7f6b7154dac36c2ff4aab9b775a7ced0905899804a104fd5df",
                      "typeString": "literal_string \"Sentences\""
                    },
                    "value": "Sentences"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "475453",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "204:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_067a77fe9dd46f90dd376cf65dfbeac08df8176aa8b5a5c4c4820f6463139743",
                      "typeString": "literal_string \"GTS\""
                    },
                    "value": "GTS"
                  }
                ],
                "id": 16,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1514,
                  "src": "180:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1514_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "180:30:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "178:2:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "217:0:0"
            },
            "scope": 59,
            "src": "167:60:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "278:193:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "293:21:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 25,
                            "name": "_colorExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "294:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 27,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 26,
                            "name": "_color",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "307:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "294:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1589,
                        1590
                      ],
                      "referencedDeclaration": 1589,
                      "src": "285:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "285:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "285:30:0"
                },
                {
                  "assignments": [
                    32
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32,
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "scope": 57,
                      "src": "322:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "322:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 37,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "345:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33,
                        "name": "colors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "333:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "333:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$_t_uint256_$",
                        "typeString": "function (string storage ref) returns (uint256)"
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "333:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "322:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 39,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "367:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "36393730",
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "373:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6970_by_1",
                            "typeString": "int_const 6970"
                          },
                          "value": "6970"
                        },
                        "src": "367:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e7472616374204c696d69742052656163686564",
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "379:24:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61bb55f0564f770ce9e09f5b83ec48565687bd755cdbb5b2b557b990355dbcb6",
                          "typeString": "literal_string \"Contract Limit Reached\""
                        },
                        "value": "Contract Limit Reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61bb55f0564f770ce9e09f5b83ec48565687bd755cdbb5b2b557b990355dbcb6",
                          "typeString": "literal_string \"Contract Limit Reached\""
                        }
                      ],
                      "id": 38,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1589,
                        1590
                      ],
                      "referencedDeclaration": 1590,
                      "src": "359:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "359:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "359:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 46,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1586,
                          "src": "417:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "417:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 48,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "429:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 45,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1155
                      ],
                      "referencedDeclaration": 1155,
                      "src": "411:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "411:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "411:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "_colorExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "440:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 53,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "453:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "440:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "463:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "440:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "440:27:0"
                }
              ]
            },
            "documentation": null,
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "name": "_color",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "249:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "248:22:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "278:0:0"
            },
            "scope": 59,
            "src": "235:236:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 60,
        "src": "57:417:0"
      }
    ],
    "src": "0:474:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/Color.sol",
      "exportedSymbols": {
        "Color": [
          59
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "attributes": {
          "SourceUnit": 1515,
          "absolutePath": "project:/contracts/ERC721Full.sol",
          "file": "./ERC721Full.sol",
          "scope": 60,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "27:26:0"
      },
      {
        "attributes": {
          "contractDependencies": [
            69,
            170,
            432,
            990,
            1015,
            1348,
            1369,
            1494,
            1514
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            59,
            1514,
            1494,
            1369,
            1348,
            1015,
            990,
            170,
            432,
            69
          ],
          "name": "Color",
          "scope": 60
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Full",
                  "referencedDeclaration": 1514,
                  "type": "contract ERC721Full"
                },
                "id": 3,
                "name": "UserDefinedTypeName",
                "src": "75:10:0"
              }
            ],
            "id": 4,
            "name": "InheritanceSpecifier",
            "src": "75:10:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "colors",
              "scope": 59,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string[]",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "string[]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 5,
                    "name": "ElementaryTypeName",
                    "src": "92:6:0"
                  }
                ],
                "id": 6,
                "name": "ArrayTypeName",
                "src": "92:9:0"
              }
            ],
            "id": 7,
            "name": "VariableDeclaration",
            "src": "92:23:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "_colorExists",
              "scope": 59,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(string => bool)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(string => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 8,
                    "name": "ElementaryTypeName",
                    "src": "130:6:0"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 9,
                    "name": "ElementaryTypeName",
                    "src": "140:4:0"
                  }
                ],
                "id": 10,
                "name": "Mapping",
                "src": "122:23:0"
              }
            ],
            "id": 11,
            "name": "VariableDeclaration",
            "src": "122:36:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 59,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 12,
                "name": "ParameterList",
                "src": "178:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 17,
                "name": "ParameterList",
                "src": "217:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1514,
                      "type": "type(contract ERC721Full)",
                      "value": "ERC721Full"
                    },
                    "id": 13,
                    "name": "Identifier",
                    "src": "180:10:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "53656e74656e636573",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"Sentences\"",
                      "value": "Sentences"
                    },
                    "id": 14,
                    "name": "Literal",
                    "src": "191:11:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "475453",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"GTS\"",
                      "value": "GTS"
                    },
                    "id": 15,
                    "name": "Literal",
                    "src": "204:5:0"
                  }
                ],
                "id": 16,
                "name": "ModifierInvocation",
                "src": "180:30:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 18,
                "name": "Block",
                "src": "217:10:0"
              }
            ],
            "id": 19,
            "name": "FunctionDefinition",
            "src": "167:60:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 59,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_color",
                      "scope": 58,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 20,
                        "name": "ElementaryTypeName",
                        "src": "249:6:0"
                      }
                    ],
                    "id": 21,
                    "name": "VariableDeclaration",
                    "src": "249:20:0"
                  }
                ],
                "id": 22,
                "name": "ParameterList",
                "src": "248:22:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 23,
                "name": "ParameterList",
                "src": "278:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                1589,
                                1590
                              ],
                              "referencedDeclaration": 1589,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 24,
                            "name": "Identifier",
                            "src": "285:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 11,
                                      "type": "mapping(string memory => bool)",
                                      "value": "_colorExists"
                                    },
                                    "id": 25,
                                    "name": "Identifier",
                                    "src": "294:12:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 21,
                                      "type": "string memory",
                                      "value": "_color"
                                    },
                                    "id": 26,
                                    "name": "Identifier",
                                    "src": "307:6:0"
                                  }
                                ],
                                "id": 27,
                                "name": "IndexAccess",
                                "src": "294:20:0"
                              }
                            ],
                            "id": 28,
                            "name": "UnaryOperation",
                            "src": "293:21:0"
                          }
                        ],
                        "id": 29,
                        "name": "FunctionCall",
                        "src": "285:30:0"
                      }
                    ],
                    "id": 30,
                    "name": "ExpressionStatement",
                    "src": "285:30:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        32
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "_id",
                          "scope": 57,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 31,
                            "name": "ElementaryTypeName",
                            "src": "322:4:0"
                          }
                        ],
                        "id": 32,
                        "name": "VariableDeclaration",
                        "src": "322:8:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (string storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7,
                                  "type": "string storage ref[] storage ref",
                                  "value": "colors"
                                },
                                "id": 33,
                                "name": "Identifier",
                                "src": "333:6:0"
                              }
                            ],
                            "id": 34,
                            "name": "MemberAccess",
                            "src": "333:11:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 21,
                              "type": "string memory",
                              "value": "_color"
                            },
                            "id": 35,
                            "name": "Identifier",
                            "src": "345:6:0"
                          }
                        ],
                        "id": 36,
                        "name": "FunctionCall",
                        "src": "333:19:0"
                      }
                    ],
                    "id": 37,
                    "name": "VariableDeclarationStatement",
                    "src": "322:30:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_61bb55f0564f770ce9e09f5b83ec48565687bd755cdbb5b2b557b990355dbcb6",
                                  "typeString": "literal_string \"Contract Limit Reached\""
                                }
                              ],
                              "overloadedDeclarations": [
                                1589,
                                1590
                              ],
                              "referencedDeclaration": 1590,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 38,
                            "name": "Identifier",
                            "src": "359:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "uint256",
                                  "value": "_id"
                                },
                                "id": 39,
                                "name": "Identifier",
                                "src": "367:3:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "36393730",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 6970",
                                  "value": "6970"
                                },
                                "id": 40,
                                "name": "Literal",
                                "src": "373:4:0"
                              }
                            ],
                            "id": 41,
                            "name": "BinaryOperation",
                            "src": "367:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "436f6e7472616374204c696d69742052656163686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Contract Limit Reached\"",
                              "value": "Contract Limit Reached"
                            },
                            "id": 42,
                            "name": "Literal",
                            "src": "379:24:0"
                          }
                        ],
                        "id": 43,
                        "name": "FunctionCall",
                        "src": "359:45:0"
                      }
                    ],
                    "id": 44,
                    "name": "ExpressionStatement",
                    "src": "359:45:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                1155
                              ],
                              "referencedDeclaration": 1155,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 45,
                            "name": "Identifier",
                            "src": "411:5:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1586,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 46,
                                "name": "Identifier",
                                "src": "417:3:0"
                              }
                            ],
                            "id": 47,
                            "name": "MemberAccess",
                            "src": "417:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 32,
                              "type": "uint256",
                              "value": "_id"
                            },
                            "id": 48,
                            "name": "Identifier",
                            "src": "429:3:0"
                          }
                        ],
                        "id": 49,
                        "name": "FunctionCall",
                        "src": "411:22:0"
                      }
                    ],
                    "id": 50,
                    "name": "ExpressionStatement",
                    "src": "411:22:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "mapping(string memory => bool)",
                                  "value": "_colorExists"
                                },
                                "id": 51,
                                "name": "Identifier",
                                "src": "440:12:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 21,
                                  "type": "string memory",
                                  "value": "_color"
                                },
                                "id": 52,
                                "name": "Identifier",
                                "src": "453:6:0"
                              }
                            ],
                            "id": 53,
                            "name": "IndexAccess",
                            "src": "440:20:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 54,
                            "name": "Literal",
                            "src": "463:4:0"
                          }
                        ],
                        "id": 55,
                        "name": "Assignment",
                        "src": "440:27:0"
                      }
                    ],
                    "id": 56,
                    "name": "ExpressionStatement",
                    "src": "440:27:0"
                  }
                ],
                "id": 57,
                "name": "Block",
                "src": "278:193:0"
              }
            ],
            "id": 58,
            "name": "FunctionDefinition",
            "src": "235:236:0"
          }
        ],
        "id": 59,
        "name": "ContractDefinition",
        "src": "57:417:0"
      }
    ],
    "id": 60,
    "name": "SourceUnit",
    "src": "0:474:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {},
      "links": {},
      "address": "0x16c73c2dc37B67406044538fE67FA19A6EB759fc",
      "transactionHash": "0x25a697659aad35df8818217cf0ba9eb89f6544bcf1af1060b0c3cbd2f9c740a9"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-20T02:00:57.605Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.      * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}